package drools

import java.util.Map;
import java.util.HashMap;
import java.lang.String;
import com.neustar.iot.spark.rules.RulesForwardWorker;

global RulesForwardWorker worker
global Map<String,Object> attrMap
global String rest_Uri
global String jdbc_url
global String hdfs_url
global String result

dialect "java"

declare RegistryMessage
    message : Map
    result: String
    endpoint: String
end

declare RegistryResult
    message : Map
    result: String
    endpoint: String
end

declare MQTTResult
    message : Map
    result: String
    endpoint: String
end

declare MQTTMessage
    message : Map
    result: String
    endpoint: String
end

declare DashBoardData
    message : Map
    type: String
end

rule "Dashboard Reporting"
    when
         $dashBoardData : DashBoardData()
    then
    	System.out.println("****** Dashboard Reporting ******");
        worker = new RulesForwardWorker();
        rest_Uri  =  new String("https://search-iotaselasticsearch-qtpuykpxgabuzfidzncsfyp7k4.us-west-2.es.amazonaws.com/ioteventindex/"+$dashBoardData.getType());
        String ret = worker.remoteElasticSearchPost(rest_Uri, $dashBoardData.getMessage(),  null);

        System.out.println("Message sent to ElasticSearch returned : " + ret );
end


rule "Incoming Registry Post"
    when
        $messageMap : Map( this["messagetype"] == "REGISTRY_POST" )
    then
    	System.out.println("****** Incoming Registry Post ******");
        worker = new RulesForwardWorker();
        rest_Uri =  new String("http://54.149.9.196:8080");
        
        attrMap = new HashMap<String,Object>();
		attrMap.put("path", "/api/v1/devices/54919CA5-4101-4AE4-595B-353C51AA983C/rshadow");
		attrMap.put("header", "{\"API-KEY\": \"2\",\"Content-Type\": \"application/json\"}");
			
        result = worker.remoteRestPost(rest_Uri, $messageMap,  attrMap);

        $messageMap.put("endpoint_uri", rest_Uri);
        $messageMap.put("result", result);
		 
		insertLogical( new DashBoardData( $messageMap,"registry" ) );
end

rule "Incoming Registry Put"
    when
        $messageMap : Map( this["messagetype"] == "REGISTRY_PUT" )
    then
    	System.out.println("****** Incoming Registry Put ******");
        worker = new RulesForwardWorker();
        rest_Uri =  new String("http://54.149.9.196:8080");
        
        attrMap = new HashMap<String,Object>();
		attrMap.put("path", "/api/v1/devices/update");
		attrMap.put("header", "{\"API-KEY\": \"0\",\"Content-Type\": \"application/json\"}");
			
        result = worker.remoteRestPut(rest_Uri, $messageMap,  attrMap);

        $messageMap.put("endpoint_uri", rest_Uri);
        $messageMap.put("result", result);
        
       	insertLogical( new DashBoardData( $messageMap,"registry") );
end

rule "Incoming Registry Response"
    when
        $messageMap : Map( this["registrypayload"] != null && this["messagetype"] == "REGISTRY_RESPONSE" )
    then
    	System.out.println("****** Incoming Registry Response ******");		 
		insertLogical( new MQTTMessage( $messageMap,null,null ) );
end

rule "Process Successful Registry results"
	when
		$registryMessage : RegistryMessage( result contains "SUCCESS" )		
	then
		System.out.println("****** Process Successful Registry results ******");
		Map message = $registryMessage.getMessage();
		System.out.println("Message sent to registry put/post returned SUCCESS: " + message.get("result") );
		System.out.println("Now sending to MQTT and awaiting response ");
		
		attrMap = new HashMap<String,Object>();
		attrMap.put("topic", "test/my/in");
		attrMap.put("qos", 2);
		//attrMap.put("clientId", "JavaSample");

		String mqttBrokerUri = new String("tcp://ec2-52-42-35-89.us-west-2.compute.amazonaws.com:1883");	
		worker = new RulesForwardWorker();	
		result = worker.remoteMQTTCall(mqttBrokerUri,"JavaSample", message,  attrMap, null);
		
		message.put("endpoint_uri", mqttBrokerUri);
        message.put("result", result);
		insertLogical( new DashBoardData(message,"registry" ) );
end
	
	
rule "Process Failed Registry results"
	when
		$registryMessage : RegistryMessage(result contains "ERROR" )		
	then
		System.out.println("****** Process Failed Registry results ******");
		Map message = $registryMessage.getMessage();
		System.out.println("Message sent to registry put returned ERROR: " + message.get("result") );
		insertLogical( new DashBoardData(message,"registry" ));
end	

rule "Send Registry response to MQTT"
	when
			$mqttMessage : MQTTMessage( )			
	then
		System.out.println("****** Send Registry response to MQTT ******");
		Map message = $mqttMessage.getMessage();
		String mqttBrokerUri = new String("tcp://ec2-52-42-35-89.us-west-2.compute.amazonaws.com:1883");
		Map regPayloadMap = (Map)message.get("registrypayload");
		String deviceId = (String)regPayloadMap.get("deviceId");
		attrMap = new HashMap<String,Object>();
		attrMap.put("topic", deviceId+"/out");
		attrMap.put("qos", 2);
		//attrMap.put("clientId", "JavaSample");
		worker = new RulesForwardWorker();	
		result = worker.remoteMQTTCall(mqttBrokerUri,"JavaSample", message,  attrMap,  false);
		message.put("result",result);
		System.out.println( message);
		System.out.println("Message sent to MQTT returned: " + message.get("result") );
				
		attrMap = new HashMap<String,Object>();
		attrMap.put("topic", deviceId+"/in");
		attrMap.put("qos", 2);
		result = worker.subscribeToMQTT(mqttBrokerUri,"JavaSample", attrMap,false);
		message.put("result",result);
		System.out.println( message);
		System.out.println("Message sent to MQTT returned: " + message.get("result") );
				
		insertLogical( new MQTTResult(message,result,mqttBrokerUri ));
end	

rule "Process MQTT Error Response"
	when
		$mqttResult : MQTTResult( result contains "ERROR" || result contains "exception")			
	then
		System.out.println("****** Process MQTT Error Response ******");
		Map message = $mqttResult.getMessage();
		message.put("endpoint",$mqttResult.getEndpoint());
		message.put("result",$mqttResult);
		System.out.println(message);
		insertLogical( new DashBoardData(message,new String("exception") ));
end	

rule "Process MQTT Successful Response"
	when
		$mqttResult : MQTTResult( result contains "SUCCESS" )			
	then
		System.out.println("****** Process MQTT Successful Response ******");
		//String mqttReply = 
		Map message = $mqttResult.getMessage();
		message.put("messagetype","REGISTRY_PUT");
		message.put("payload",$mqttResult.getResult());
		System.out.println($mqttResult.getResult());
		//System.out.println(message);
		insertLogical(  message );
end	
	
rule "Handle Notifications"
    when
         $messageMap : Map( this["messagetype"] == "NOTIFICATION" )
    then
    	System.out.println("****** Handle Notifications ******");
       insertLogical( new DashBoardData($messageMap,new String("notification") ));
end

