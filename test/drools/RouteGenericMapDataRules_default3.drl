package drools

import java.util.Map;
import java.util.HashMap;
import java.lang.String;
import com.neustar.iot.spark.rules.RulesForwardWorker;

global RulesForwardWorker worker
global Map<String,Object> attrMap
global String rest_Uri
global String jdbc_url
global String hdfs_url
global String result

dialect "java"

declare RegistryResult
    message : Map
    result: String
    endpoint: String
end


declare DashBoardData
    message : Map
    type: String
end


rule "Dashboard Reporting"
    when
         $dashBoardData : DashBoardData()
    then
        worker = new RulesForwardWorker();
        rest_Uri  =  new String("https://search-iotaselasticsearch-qtpuykpxgabuzfidzncsfyp7k4.us-west-2.es.amazonaws.com/ioteventindex/"+$dashBoardData.getType());
        String ret = worker.remoteElasticSearchPost(rest_Uri, $dashBoardData.getMessage(),  null);

        System.out.println("Message sent to ElasticSearch returned : " + ret );
end


rule "Registry Post"
    when
        $messageMap : Map( this["messagetype"] == "REGISTRY_POST" )
    then
        worker = new RulesForwardWorker();
        rest_Uri =  new String("http://54.149.9.196:8080");
        
        attrMap = new HashMap<String,Object>();
		attrMap.put("path", "/api/v1/devices/54919CA5-4101-4AE4-595B-353C51AA983C/rshadow");
		attrMap.put("header", "{\"API-KEY\": \"2\",\"Content-Type\": \"application/json\"}");
			
        result = worker.remoteRestPost(rest_Uri, $messageMap,  attrMap);

        $messageMap.put("endpoint_uri", rest_Uri);
        $messageMap.put("result", result);
		 
		insertLogical( new RegistryResult( $messageMap,result,rest_Uri ) );
end


rule "Registry Put"
    when
        $messageMap : Map( this["messagetype"] == "REGISTRY_PUT" )
    then
        worker = new RulesForwardWorker();
        rest_Uri =  new String("http://54.149.9.196:8080");
        
        attrMap = new HashMap<String,Object>();
		attrMap.put("path", "/api/v1/devices/update");
		attrMap.put("header", "{\"API-KEY\": \"0\",\"Content-Type\": \"application/json\"}");
			
        result = worker.remoteRestPut(rest_Uri, $messageMap,  attrMap);

        $messageMap.put("endpoint_uri", rest_Uri);
        $messageMap.put("result", result);
        
       	insertLogical( new RegistryResult( $messageMap,result,rest_Uri ) );
end


rule "Process Successful Registry results"
	when
		$messageMap : Map( )
			RegistryResult(message == $messageMap && result contains "SUCCESS" )		
	then
		System.out.println("Message sent to registry put/post returned SUCCESS: " + $messageMap.get("result") );
		System.out.println("Now sending to MQTT and awaiting response ");
		
		attrMap = new HashMap<String,Object>();
		attrMap.put("topic", "test/my/in");
		attrMap.put("qos", 2);
		attrMap.put("clientId", "JavaSample");

		String mqttBrokerUri = new String("tcp://ec2-52-42-35-89.us-west-2.compute.amazonaws.com:1883");
		
		worker = new RulesForwardWorker();	
		result = worker.remoteMQTTCall(mqttBrokerUri, $messageMap,  attrMap);
		
		$messageMap.put("endpoint_uri", mqttBrokerUri);
        $messageMap.put("result", result);
		insertLogical( new DashBoardData($messageMap,$messageMap.get("messagetype").toString() ) );
end
	
	
rule "Process Failed Registry results"
	when
		$messageMap : Map( )
			RegistryResult(message == $messageMap && result contains "ERROR" )
				
	then
		System.out.println("Message sent to registry put returned ERROR: " + $messageMap.get("result") );
		insertLogical( new DashBoardData($messageMap,new String("exception") ));
end	

	
rule "Handle Notifications"
    when
         $messageMap : Map( this["messagetype"] == "NOTIFICATION" )
    then
       insertLogical( new DashBoardData($messageMap,new String("notification") ));
end

